*** Settings ***
Resource   lib/vomslib.txt

*** Test Cases ***

A user gets the right message when trying to create a proxy without a certificate
  [Setup]   Stop using certificate
  ${output}  Create proxy failure  -pwstdin 
  Should Contain  ${output}  No credentials found!

A user gets the right message when trying to create a proxy providing the wrong passphrase
  [Setup]  Use certificate   test0
  ${output}  Execute and Check Failure   echo "CAMAGHE" | voms-proxy-init -pwstdin
  Should Contain  ${output}  wrong pass phrase
  [Teardown]  Stop using certificate

A user cannot get a proxy from a VO she does not belong to
  [Setup]   Use certificate   test5
  Check voms-proxy-init failure  User unknown to this VO
  [Teardown]   Stop using certificate

A user can get a proxy from a VO she belongs to
  [Setup]   Use certificate   test0
  Create voms proxy
  [Teardown]   Stop using certificate 

A user cannot obtain a proxy with an expired certificate
  [Setup]   Use certificate   expired
  Check voms-proxy-init failure   expired
  [Teardown]   Stop using certificate

A user cannot obtain a proxy with a revoked certificate
  [Setup]   Use certificate   revoked
  Check voms-proxy-init failure   revoked
  [Teardown]   Stop using certificate

#A user can obtain a role she holds from a VO she belongs to
#  [Setup]   Use certificate   test0
#  @{roles}=   Create List   /${voName}/${voName}/R1   /${voName}/${voName}/R2
#  Create voms proxy with roles   @{roles}
#  [Teardown]   Stop using certificate

A user can obtain a role she holds from a VO she belongs to
        [Setup]  Use certificate  test0
        Create proxy   -voms ${voName}:/${voName}/G1/Role=R1
        ${output}  Get proxy info  -fqan
        Should Contain  ${output}  /${voName}/G1/Role=R1
        [Teardown]  Stop using certificate
 
See if voms-proxy-init --hours works
  [Setup]   Use certificate   test0
  ${output}   Create proxy   -hours 3
  Should Contain  ${output}  Created proxy
  ${output} =  Get proxy info  -timeleft
  Should Match Regexp  ${output}  (02|03):\\d+:\\d+
  [Teardown]   Stop using certificate 

See if voms-proxy-init --hours work
  [Setup]  Use certificate  test0
  Create Proxy  --hours 40
  ${output}  Get proxy info
  Should Match Regexp  ${output}  (39|40):\\d+:\\d+
  [Teardown]  Stop using certificate

See if voms-proxy-init --noregen works
  [Setup]   Use certificate   test0
  ${output}  Create voms proxy
  ${output}   Create proxy   -noregen 
  Should Contain  ${output}  Created proxy
  ${output} =  Get proxy info  -chain
  Should Match Regexp  ${output}   Subject:\\s+(CN=proxy,){2}CN=.+
  [Teardown]   Stop using certificate

#See if voms-proxy-init --conf works
#  [Setup]   Use certificate   test0
#  ${output}   Execute and Check Success   echo "--voms="${voName}>/tmp/myconf.test;cat /tmp/myconf.test
#  ${output}   Create proxy   -conf /tmp/myconf.test
#  Should Contain  ${output}  Created proxy
#  [Teardown]   Stop using certificate

See if voms-proxy-init --old works
  [Setup]   Use certificate   test0
  ${output}   Create proxy   -old
  ${output}   Execute and Check Success   echo ${privateKeyPassword} | voms-proxy-info
  Should Match Regexp  ${output}  type\\s+:\\s+full legacy globus proxy
  [Teardown]   Stop using certificate

See if voms-proxy-init detects fake arguments
  [Setup]  Use certificate  test0
  ${output}   Create proxy failure  --voms voms1 junk
  Should Contain  ${output}  Check your vomses configuration
  [Teardown]  Stop using certificate

See if requesting a too long proxy fails
  [Setup]  Use certificate  test0
  ${output}   Create proxy   --voms ${voName} --valid 100:00
  Should Contain  ${output}  The validity of this VOMS AC in your proxy is shortened to 86400 seconds!
  [Teardown]  Stop using certificate

Can AC validity be limited?
  [Setup]  Use certificate  test0
  ${output}   Create proxy   --voms ${voName} --vomslife 5:00
  ${output}   Get proxy info  -all
  Should Match Regexp  ${output}  timeleft\\s+:\\s+(11|12):\\d+:\\d+
  Should Match Regexp  ${output}  timeleft\\s+:\\s+(04|05):\\d+:\\d+
  [Teardown]  Stop using certificate

See if requesting a too long ac length fails
  [Setup]  Use certificate  test0
  ${output}   Create proxy   --voms ${voName} --vomslife 100:00
  Should Contain  ${output}  The validity of this VOMS AC in your proxy is shortened to 86400 seconds!
  [Teardown]  Stop using certificate

See if a proxy type is detected correctly
  [Setup]  Use certificate  test0
  ${output}   Create proxy   -rfc 
  ${output}   Get proxy info  -type
  Should Contain  ${output}   RFC3820 compliant impersonation proxy
  Destroy proxy
  ${output}   Create proxy   -old
  ${output}   Get proxy info  -type
  Should Contain  ${output}   full legacy globus proxy
  Destroy proxy
  ${output}   Create proxy   -proxyver 3
  ${output}   Get proxy info  -type
  Should Contain  ${output}   Proxy draft (pre-RFC) impersonation proxy
  [Teardown]  Stop using certificate

See if voms-proxy-init --quiet works
  [Setup]  Use certificate  test0
  ${output}   Create proxy   --voms ${voName} -q 
  Should Be Equal  ${output}  ${EMPTY}
  [Teardown]  Stop using certificate

See if voms-proxy-init --limited (gt2) works
	[Setup]  Use certificate  test0
	Create Proxy  --limited
	${output}   Get proxy info
	Should Contain  ${output}  limited proxy
	[Teardown]  Stop using certificate

See if voms-proxy-init --bits works
	[Setup]  Use certificate  test0
	Create Proxy  --bits 512
	${output}  Get proxy openssl
	Should Contain  ${output}  Public-Key: (512 bit)
	[Teardown]  Stop using certificate

See if voms-proxy-init --conf works
	[Setup]  Use certificate  test0
	Run  echo "--version" > configFile
	${output}  Create Proxy  --conf configFile
	Should Contain  ${output}   voms-proxy-init
	Run  rm configFile

See if voms-proxy-init --path_length works
	[Setup]  Use certificate  test0
	Create Proxy  --rfc --path_length 1
	${output}  Get proxy openssl
	Should Contain  ${output}  Path Length Constraint: 01
	[Teardown]  Stop using certificate

See if voms-proxy-init --failonwarn works
	[Setup]  Use certificate  test0
	${rc}  Run and Return RC  echo ${privateKeyPassword} | voms-proxy-init -pwstdin -voms ${voName} --failonwarn --valid 100:00
	Should Be Equal As Integers  ${rc}  1
	[Teardown]  Stop using certificate

See if voms-proxy-init --ignorewarn works
	[Setup]  Use certificate  test0
	${output}  Create Proxy  --ignorewarn --hours 100
	Should Not Contain  ${output}  Warning
	[Teardown]  Stop using certificate

See if voms-proxy-init --order works
        [Setup]  Use certificate  test0
        Create proxy   -voms ${voName} -order /${voName}/G1
        ${output}  Get proxy info  -fqan
        ${expected}  Set Variable  /${voName}/G1/Role=NULL/Capability=NULL\n/${voName}/Role=NULL/Capability=NULL
        Log  ${expected}
        Should Be Equal As Strings  ${output}  ${expected}
        [Teardown]  Stop using certificate

See if voms-proxy-init --order works with multiple arguments
        [Setup]  Use certificate  test0
        Create proxy   -voms ${voName} -order /${voName}/G1,/${voName}
        ${output}  Get proxy info  -fqan
        ${expected}  Set Variable  /${voName}/G1/Role=NULL/Capability=NULL\n/${voName}/Role=NULL/Capability=NULL
        Log  ${expected}
        Should Be Equal As Strings  ${output}  ${expected}
        [Teardown]  Stop using certificate

See if a targets can be added to a proxy
        [Setup]  Use certificate  test0
	${target}  Run   hostname -f
        ${output}  Create proxy  -voms ${voName} -target ${target}
	Should Not Contain   ${output}  AC target check failed
        [Teardown]  Stop using certificate

See if voms-proxy-init fails with a fake target
        [Setup]  Use certificate  test0       
        ${output}  Create proxy  -voms ${voName} -target fake.cnaf.infn.it
	Should Contain   ${output}  AC target check failed
        [Teardown]  Stop using certificate

See if voms-proxy-init --old works
	[Setup]  Use certificate  test0
	${output}  Create Proxy  --old
	[Teardown]  Stop using certificate

See if voms-proxy-init manages unrecognized options
	[Setup]  Use certificate  test0
	${output}  Create Proxy Failure  --dummyoption
	Should Contain  ${output}  Unrecognized option:
	[Teardown]  Stop using certificate

See if voms-proxy-info warns when X509_CERT_DIR does not point to a directory
	[Setup]  Use certificate  test0
	Set Environment Variable  X509_CERT_DIR  /unlikely/path
	${output}  Create Proxy Failure  --verify
	Should Contain  ${output}  is not a directory
	[Teardown]  Remove Environment Variable  X509_CERT_DIR
	[Teardown]  Stop using certificate

See if voms-proxy-info writes an error message without CA certificates
	[Setup]  Use certificate  test0
	Set Environment Variable  X509_CERT_DIR  /tmp
	${output}  Create Proxy Failure  --verify
	Should Contain  ${output}  No valid CRL was found for the CA which issued the chain
	[Teardown]  Remove Environment Variable  X509_CERT_DIR
	[Teardown]  Stop using certificate

See if voms-proxy-info --acexists works
	[Setup]  Use certificate  test0
	Create voms proxy
	${rc}  Run and Return RC  voms-proxy-info --acexists ${voName}
	Should Be Equal As Integers  ${rc}  0
	${rc}  Run and Return RC  voms-proxy-info --acexists foo
	Should Be Equal As Integers  ${rc}  1
	[Teardown]  Stop using certificate

See if voms-proxy-info works even if when no ac is present in proxy
	[Setup]  Use certificate  test0
	Create plain proxy
	Get Proxy info
	[Teardown]  Stop using certificate

See if voms-proxy-init returns a correct message when the certificate expires
	[Setup]  Use certificate  test0
	${output}  Create proxy  --hours 10000
	Should Contain  ${output}  which is within the requested lifetime of the proxy
	[Teardown]  Stop using certificate

See if voms-proxy-init does timeout during negotiation
	[Setup]  Use certificate  test0
	${beginLiteral}  Get Time  epoch
	${begin}  Convert To Integer  ${beginLiteral}
	${output}  Create proxy failure  --voms bane --timeout 1
	${endLiteral}  Get Time  epoch
	${end}  Convert To Integer  ${endLiteral}
	${time}  Evaluate  ${end}-${begin}
	Should Contain  ${output}  connect timed out
	# behind connecting, voms-proxy-init needs two secs to do its business.
	# and there's two connections to try, so total time should be around 4s
	${result}  Evaluate  3 < ${time} < 6
	Should Be True  ${result}
	[Teardown]  Stop using certificate

See if voms-proxy-init --version works
        [Setup]  Use certificate  test0
        ${output}  Create Proxy  --version
        Should Contain  ${output}   voms-proxy-init
        [Teardown]  Stop using certificate

See if voms-proxy-init -help works
        ${output}  Create Proxy  -help
        Should Contain  ${output}   usage: voms-proxy-init [options]

See if voms-proxy-init --proxyver 10 fails correctly
        ${output}  Create Proxy failure  -proxyver 10

See if -pwstdin works with voms-proxy-init
        [Setup]  Use certificate  test0
        Create proxy
        [Teardown]  Stop using certificate

See if voms does not allow expansion of credential set
        [Setup]  Use certificate  test0
        Create proxy   -voms ${voName}
        Create proxy   -voms ${voName}:/${voName}/G1/Role=R1 --valid 10:00 --noregen
        ${output}  Get proxy info  -all
        Should Not Contain   ${output}  /${voName}/G1/Role=R1
        [Teardown]  Stop using certificate

See if missing certificate implies an error
        Create proxy failure  -voms ${voName}

