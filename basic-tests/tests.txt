*** Settings ***
Resource   lib/vomslib.txt

*** Keywords ***

Setup for X509_CERT_DIR test   [Arguments]   ${x509CertDir}
  Use certificate   test0
  Set Environment Variable  X509_CERT_DIR  ${x509CertDir}

Teardown for X509_CERT_DIR test
  Remove Environment Variable  X509_CERT_DIR
  Stop using certificate

Setup for certdir test with test0 revoked 
	${tmpCertDir}   Run   mktemp -d /tmp/certdir-XXXX
    Run  mkdir ${tmpCertDir}
	Set Environment Variable   __VOMS__CUSTOM__CERTDIR__   ${tmpCertDir}
	Execute and Check Success   cp /etc/grid-security/certificates/10b10516.0 ${tmpCertDir}
	Execute and Check Success   cp /etc/grid-security/certificates/d82942ab.0 ${tmpCertDir}
	Execute and Check Success   cp ${certsDir}/custom-crls/10b10516.r0 ${tmpCertDir}
	Execute and Check Success   cp ${certsDir}/custom-crls/d82942ab.r0 ${tmpCertDir}
	Use certificate  test0
	[Return]   ${tmpCertDir}

Teardown for certdir test with test0 revoked
	Remove Environment Variable   __VOMS__CUSTOM__CERTDIR__
	Stop using certificate


*** Test Cases ***

A user gets the right message when trying to create a proxy without a certificate
  [Setup]   Stop using certificate
  ${output}  Create proxy failure  -pwstdin 
  Should Contain  ${output}  No credentials found!

A user gets the right message when trying to create a proxy providing the wrong passphrase
  [Setup]  Use certificate   test0
  ${output}  Execute and Check Failure   echo "CAMAGHE" | voms-proxy-init -pwstdin
  Should Contain  ${output}  Can not load PEM private key: the password is incorrect or the PEM data is corrupted.
  [Teardown]  Stop using certificate

A user cannot get a proxy from a VO she does not belong to
 	[Tags]  remote
  [Setup]   Use certificate   test5
  Check voms-proxy-init failure  User unknown to this VO
  [Teardown]   Stop using certificate

A user can get a proxy from a VO she belongs to
  [Tags]  remote
	[Setup]   Use certificate   test0
  Create voms proxy
  [Teardown]   Stop using certificate 

A user cannot obtain a proxy with an expired certificate
  [Tags]  remote
	[Setup]   Use certificate   expired
  Check voms-proxy-init failure   expired
  [Teardown]   Stop using certificate

A user cannot obtain a proxy with a revoked certificate
  [Tags]  remote
	[Setup]   Use certificate   revoked
  Check voms-proxy-init failure   revoked
  [Teardown]   Stop using certificate

A user can obtain a role she holds from a VO she belongs to
  [Tags]  remote
	[Setup]  Use certificate  test0
  Create proxy   -voms ${vo1}:/${vo1}/G1/Role=R1
  ${output}  Get proxy info  -fqan
  Should Contain  ${output}  /${vo1}/G1/Role=R1
  [Teardown]  Stop using certificate
 
See if voms-proxy-init --hours works
  [Setup]   Use certificate   test0
  ${output}   Create proxy   -hours 3
  Should Contain  ${output}  Created proxy
  ${output} =  Get proxy info  --timeleft
  ${result} =  Convert to integer  ${output}
	Should be true  ${result} > 10000
  Create Proxy  --hours 40
  ${output}  Get proxy info  --timeleft
  ${result} =  Convert to integer  ${output}
	Should be true  ${result} > 140000
  [Teardown]  Stop using certificate

See if voms-proxy-init --noregen works
  [Tags]  remote
	[Setup]   Use certificate   test0
  ${output}  Create voms proxy
  ${output}   Create proxy   -noregen 
  Should Contain  ${output}  Created proxy
  ${output} =  Get proxy info  -chain
  Should Match Regexp  ${output}   Subject:\\s+(CN=proxy,){2}CN=.+
  [Teardown]   Stop using certificate

See if voms-proxy-init --old works
  [Setup]   Use certificate   test0
  ${output}   Create proxy   -old
  ${output}   Execute and Check Success   echo ${privateKeyPassword} | voms-proxy-info
  Should Match Regexp  ${output}  type\\s+:\\s+full legacy globus proxy
  [Teardown]   Stop using certificate

See if voms-proxy-init detects fake arguments
	[Setup]  Use certificate  test0
  ${output}   Create proxy failure  --voms voms1 junk
  Should Contain  ${output}  Check your vomses configuration
  [Teardown]  Stop using certificate

See if requesting a too long proxy fails
  [Tags]  remote
  [Setup]  Use certificate  test0
  ${output}   Create proxy   --voms ${vo1} --valid 100:00
  Should Contain  ${output}  The validity of this VOMS AC in your proxy is shortened to 86400 seconds!
  [Teardown]  Stop using certificate

Can AC validity be limited?
  [Tags]  remote
	[Setup]  Use certificate  test0
  ${output}   Create proxy   --voms ${vo1} --vomslife 5:00
  ${output}   Get proxy info  -all
  Should Match Regexp  ${output}  timeleft\\s+:\\s+(11|12):\\d+:\\d+
  Should Match Regexp  ${output}  timeleft\\s+:\\s+(04|05):\\d+:\\d+
  [Teardown]  Stop using certificate

See if requesting a too long ac length fails
  [Tags]  remote
	[Setup]  Use certificate  test0
  ${output}   Create proxy   --voms ${vo1} --vomslife 100:00
  Should Contain  ${output}  The validity of this VOMS AC in your proxy is shortened to 86400 seconds!
  [Teardown]  Stop using certificate

See if a proxy type is detected correctly
  [Setup]  Use certificate  test0
  ${output}   Create proxy   -rfc 
  ${output}   Get proxy info  -type
  Should Contain  ${output}   RFC3820 compliant impersonation proxy
  Destroy proxy
  ${output}   Create proxy   -old
  ${output}   Get proxy info  -type
  Should Contain  ${output}   full legacy globus proxy
  Destroy proxy
  ${output}   Create proxy   -proxyver 3
  ${output}   Get proxy info  -type
  Should Contain  ${output}   Proxy draft (pre-RFC) impersonation proxy
  [Teardown]  Stop using certificate

See if voms-proxy-init --quiet works
  [Tags]  remote
	[Setup]  Use certificate  test0
  ${output}   Create proxy   --voms ${vo1} -q 
  Should Be Equal  ${output}  ${EMPTY}
  [Teardown]  Stop using certificate

See if voms-proxy-init --limited (gt2) works
	[Setup]  Use certificate  test0
	Create Proxy  --limited
	${output}   Get proxy info
	Should Contain  ${output}  limited proxy
	[Teardown]  Stop using certificate

See if voms-proxy-init --bits works
	[Setup]  Use certificate  test0
	Create Proxy  --bits 512
	${output}  Get proxy openssl
	Should Contain  ${output}  Public-Key: (512 bit)
	[Teardown]  Stop using certificate

See if voms-proxy-init --conf works
	[Setup]  Use certificate  test0
	${tmpFile}   Run  mktemp /tmp/voms-testXXX	
	Execute and Check Success   echo "--version" > ${tmpFile}
	${output}  Create Proxy  --conf ${tmpFile}
	Should Contain  ${output}   voms-proxy-init
	Execute and Check Success   rm ${tmpFile}

See if voms-proxy-init --path_length works
	[Setup]  Use certificate  test0
	Create Proxy  --rfc --path_length 1
	${output}  Get proxy openssl
	Should Contain  ${output}  Path Length Constraint: 01
	[Teardown]  Stop using certificate

See if voms-proxy-init --failonwarn works
	[Tags]  remote
	[Setup]  Use certificate  test0
	${rc}  Run and Return RC  echo ${privateKeyPassword} | voms-proxy-init -pwstdin -voms ${vo1} --failonwarn --valid 100:00
	Should Be Equal As Integers  ${rc}  1
	[Teardown]  Stop using certificate

See if voms-proxy-init --ignorewarn works
	[Setup]  Use certificate  test0
	${output}  Create Proxy  --ignorewarn --hours 100
	Should Not Contain  ${output}  Warning
	[Teardown]  Stop using certificate

See if voms-proxy-init --order works
	[Tags]  remote
	[Setup]  Use certificate  test0
	Create proxy   -voms ${vo1} -order /${vo1}/G1
	${output}  Get proxy info  -fqan
  ${expected}  Set Variable  /${vo1}/G1/Role=NULL/Capability=NULL\n/${vo1}/Role=NULL/Capability=NULL\n/${vo1}/G2/Role=NULL/Capability=NULL\n/${vo1}/G2/G3/Role=NULL/Capability=NULL
  Should Be Equal As Strings  ${output}  ${expected}
  [Teardown]  Stop using certificate

See if voms-proxy-init --order works with multiple arguments
  [Tags]  remote
	[Setup]  Use certificate  test0
  Create proxy   -voms ${vo1} -order /${vo1}/G2/G3 -order /${vo1}/G2 
  ${output}  Get proxy info  -fqan
  ${expected}  Set Variable  /${vo1}/G2/G3/Role=NULL/Capability=NULL\n/${vo1}/G2/Role=NULL/Capability=NULL\n/${vo1}/G1/Role=NULL/Capability=NULL\n/${vo1}/Role=NULL/Capability=NULL
  Should Be Equal As Strings  ${output}  ${expected}
  [Teardown]  Stop using certificate

See if a target can be added to a proxy
	[Tags]  remote
	[Setup]  Use certificate  test0
	${target}  Run   hostname -f
	${output}  Create proxy  -voms ${vo1} -target ${target}
	Should Not Contain   ${output}  AC target check failed
	[Teardown]  Stop using certificate

See if voms-proxy-init fails with a fake target
	[Tags]  remote
	[Setup]  Use certificate  test0       
	${output}  Create proxy  -voms ${vo1} -target fake.cnaf.infn.it
	Should Contain   ${output}  AC target check failed
	[Teardown]  Stop using certificate

See if voms-proxy-init manages unrecognized options
	[Setup]  Use certificate  test0
	${output}  Create Proxy Failure  --dummyoption
	Should Contain  ${output}  Unrecognized option:
	[Teardown]  Stop using certificate

See if voms-proxy-init --certdir works
	[Tags]   dev
	[Setup]  Setup for certdir test with test0 revoked 
	${tmpCertDir}   Get Environment Variable   __VOMS__CUSTOM__CERTDIR__ 
	${output}  Create Proxy Failure  --certdir ${tmpCertDir} --verify
	Should Contain  ${output}  Certificate was revoked
	[Teardown]  Teardown for certdir test with test0 revoked

See if voms-proxy-init warns when X509_CERT_DIR does not point to a directory
	[Tags]   dev
	[Setup]  Setup for X509_CERT_DIR test   /unlikely/path
	${output}  Create Proxy Failure  --verify
	Should Contain  ${output}  Invalid trust anchors location
	[Teardown]  Teardown for X509_CERT_DIR test

See if voms-proxy-init writes an error message when the trust anchors location does not contain the ca
	[Setup]  Setup for X509_CERT_DIR test   /tmp
	${output}  Create Proxy Failure  --verify
	Should Contain  ${output}  No valid CRL was found for the CA which issued the chain
	[Teardown]  Teardown for X509_CERT_DIR test

See if voms-proxy-info --acexists works
	[Setup]  Use certificate  test0
	Create voms proxy
	${rc}  Run and Return RC  voms-proxy-info --acexists ${vo1}
	Should Be Equal As Integers  ${rc}  0
	${rc}  Run and Return RC  voms-proxy-info --acexists foo
	Should Be Equal As Integers  ${rc}  1
	Create proxy
	${rc}  Run and Return RC  voms-proxy-info --acexists ${vo1}
	Should Be Equal As Integers  ${rc}  1
	[Teardown]  Stop using certificate

See if voms-proxy-info works even if when no ac is present in proxy
	[Setup]  Use certificate  test0
	Create plain proxy
	Get Proxy info
	[Teardown]  Stop using certificate

voms-proxy-init should limit proxy lifetime to be consistent with issuing certificate lifetime
	[Setup]   Use certificate   test0
	${output}   Create proxy   --hours  96426
	Should Contain   ${output}   proxy lifetime limited to issuing credential lifetime
	${certEndTime}   Get named certificate end date   test0
	${proxyPath}   Get proxy path
	${proxyEndTime}   Get certificate end date   ${proxyPath}
	${rc}   Compare Dates   ${proxyEndTime}   ${certEndTime}
	Should Be True   ${rc} == -1 or ${rc} == 0
	${rc}   Date Difference In Seconds   ${proxyEndTime}   ${certEndTime}
	Should Be True   ${rc} < 10
	[Teardown]   Stop using certificate

See if voms-proxy-init read timeout works
	[Setup]  Use certificate  test0
	${beginLiteral}  Get Time  epoch
	${begin}  Convert To Integer  ${beginLiteral}
	${output}  Create proxy failure  --voms bane --timeout 1
	${endLiteral}  Get Time  epoch
	${end}  Convert To Integer  ${endLiteral}
	${time}  Evaluate  ${end}-${begin}
	Should Contain  ${output}  Read timed out
	# behind connecting, voms-proxy-init needs two secs to do its business,
	# and there's two connections to try, so total time should be around 4s
	${result}  Evaluate  ${time} < 8
	Should Be True  ${result}
	[Teardown]  Stop using certificate

See if voms-proxy-init connect timeout works
	[Setup]  Use certificate  test0
	${beginLiteral}  Get Time  epoch
	${begin}  Convert To Integer  ${beginLiteral}
	${tmpVomses}   Run   mktemp /tmp/vomsesXXX
	Execute and Check Success   echo \\"timeout\\" \\"10.255.255.1\\" \\"81\\" \\"${vo1_issuer}\\" \\"timeout\\" > ${tmpVomses}
	${output}  Create proxy failure  --voms timeout --timeout 1 --vomses ${tmpVomses}
	${endLiteral}  Get Time  epoch
	${end}  Convert To Integer  ${endLiteral}
	${time}  Evaluate  ${end}-${begin}
	Should Contain  ${output}  connect timed out
	# behind connecting, voms-proxy-init needs two secs to do its business,
	# and there's two connections to try, so total time should be around 4s
	Should Be True   ${time} < 8
	[Teardown]  Stop using certificate

See if voms-proxy-init --version works
  [Setup]  Use certificate  test0
  ${output}  Create Proxy  --version
  Should Contain  ${output}   voms-proxy-init
  [Teardown]  Stop using certificate

See if voms-proxy-init -help works
  ${output}  Create Proxy  -help
  Should Contain  ${output}   usage: voms-proxy-init [options]

See if voms-proxy-init --proxyver 10 fails correctly
  ${output}  Create Proxy failure  -proxyver 10

See if -pwstdin works with voms-proxy-init
  [Setup]  Use certificate  test0
  Create proxy
  [Teardown]  Stop using certificate

See if voms does not allow expansion of credential set
  [Tags]  remote
	[Setup]  Use certificate  test0
  Create proxy   -voms ${vo1}
  Create proxy   -voms ${vo1}:/${vo1}/G1/Role=R1 --valid 10:00 --noregen
  ${output}  Get proxy info  -all
  Should Not Contain   ${output}  /${vo1}/G1/Role=R1
  [Teardown]  Stop using certificate

See if missing certificate implies an error
  [Tags]  remote
	Create proxy failure  -voms ${vo1}

See if voms-proxy-destroy --dry works
	[Setup]  Use certificate  test0
	Create plain proxy
	Destroy proxy  --dry
	Proxy Should Exist
	[Teardown]  Stop using certificate

See if voms-proxy-init --out fails correctly when given a wrong location
	[Setup]  Use certificate  test0
	File Should Not Exist  /unlikely/path
	${output}  Create proxy failure  --out /unlikely/path 
	Should Contain  ${output}  Error creating proxy certificate: /unlikely/path
	[Teardown]  Stop using certificate

See if voms-proxy-init --debug works
	[Tags]  remote
	[Setup]  Use certificate  test0
	${output}  Create proxy  --voms ${vo1} --debug
	Should Contain  ${output}  Looking for user credentials in
	Should Contain  ${output}  Credentials loaded successfully
	Should contain  ${output}  Loading CA Certificate
	Should contain  ${output}  Looking for VOMSES information in
	Should contain  ${output}  Loaded vomses information
	Should contain  ${output}  Contacting
	Should contain  ${output}  Sent HTTP request for
	Should contain  ${output}  Received VOMS response:
	Should contain  ${output}  Remote VOMS server contacted succesfully.
	Should contain  ${output}  Looking for VOMS AA certificates in 
	Should contain  ${output}  Looking for LSC information in 
	Should contain  ${output}  Loaded LSC information from file
	Should contain  ${output}  VOMS AC validation for		
	[Teardown]  Stop using certificate

See if voms-proxy-init --vomses fails correctly when given a wrong location
	[Tags]  remote
	[Setup]  Use certificate  test0
	Should Not Exist  /unlikely/path
	${output}  Create proxy failure  --voms ${vo1} --vomses /unlikely/path
	Should contain  ${output}   No valid VOMSES information found locally while looking in: [/unlikely/path]
	[Teardown]  Stop using certificate
	
See if voms-proxy-init -pwstdin fails correctly when no password is provided
	[Setup]  Use certificate  test0
	${output}  Execute and Check Failure  echo "" | voms-proxy-init --pwstdin
	Should contain  ${output}  No credentials found!
	${output}  Execute and Check Failure  echo "" | voms-proxy-init --pwstdin --debug
	Should contain  ${output}  Credentials couldn't be loaded
	Should contain  ${output}  Can not load PEM private key: the password is incorrect or the PEM data is corrupted	
	Should contain  ${output}  No credentials found!
	[Teardown]  Stop using certificate
	
See if voms-proxy-info honors X509_USER_PROXY
	[Tags]  regression
	[Documentation]  Regression test for https://issues.infn.it/jira/browse/VOMS-296. Command voms-proxy-info ignores variable X509_USER_PROXY.
	[Setup]  Use certificate  test0
	Create voms proxy
	${proxyFile}  Get proxy path
	${tmpFile}  Run  mktemp /tmp/voms-testXXX
	Execute and Check Success  mv ${proxyFile} ${tmpFile} 
	Set environment variable  X509_USER_PROXY  ${tmpfile}
	${output}  Get proxy info
	Should Not Contain  ${output}  Proxy not found
	Remove environment variable  X509_USER_PROXY
	[Teardown]  Stop using certificate

See if voms-proxy-init honors X509_USER_PROXY
	[Tags]  voms-proxy-init
	[Documentation]  Command voms-proxy-init must save file to the path pointed to by the env variable X509_USER_PROXY when this is set.
	[Setup]  Use certificate  test0
	${tmpFile}  Run  mktemp /tmp/voms-testXXX
	Set environment variable  X509_USER_PROXY  ${tmpfile}
	Create voms proxy
	File Should Exist  ${tmpfile} 
	Remove environment variable  X509_USER_PROXY
	[Teardown]  Stop using certificate

Check that voms-proxy-info timeleft options prints time in seconds
	[Tags]  regression  voms-proxy-info
	[Documentation]  Regression test for https://issues.infn.it/jira/browse/VOMS-296,%20https://issues.infn.it/jira/browse/VOMS-307.
	[Setup]  Use certificate  test0
	Create voms proxy
	${output}  Get proxy info  --timeleft
	Should Not Contain  ${output}  :

Check that voms-proxy-info actimeleft options prints time in seconds
	[Tags]  regression  voms-proxy-info
	[Documentation]  Regression test for https://issues.infn.it/jira/browse/VOMS-296,%20https://issues.infn.it/jira/browse/VOMS-307.
	[Setup]  Use certificate  test0
	Create voms proxy
	${output}  Get proxy info  --actimeleft
	Should Not Contain  ${output}  :
	


