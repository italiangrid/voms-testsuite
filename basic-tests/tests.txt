*** Settings ***
Resource   lib/vomslib.txt

*** Test Cases ***

A user gets the right message when trying to create a proxy without a certificate
  [Setup]   Stop using certificate
  ${output}   Execute and Check Failure   echo ${privateKeyPassword} | voms-proxy-init -pwstdin
  Should Contain  ${output}  Unable to find user certificate or key

A user gets the right message when trying to create a proxy providing the wrong passphrase
  [Setup]  Use certificate   test0
  ${output}   Execute and Check Failure   echo "CAMAGHE" | voms-proxy-init -pwstdin
  Should Contain  ${output}  wrong pass phrase
  [Teardown]  Stop using certificate

A user cannot get a proxy from a VO she does not belong to
  [Setup]   Use certificate   test5
  Check voms-proxy-init failure  User unknown to this VO
  [Teardown]   Stop using certificate

A user can get a proxy from a VO she belongs to
  [Setup]   Use certificate   test0
  Create voms proxy
  [Teardown]   Stop using certificate 

A user cannot obtain a proxy with an expired certificate
  [Setup]   Use certificate   expired
  Check voms-proxy-init failure   expired
  [Teardown]   Stop using certificate

A user cannot obtain a proxy with a revoked certificate
  [Setup]   Use certificate   revoked
  Check voms-proxy-init failure   revoked
  [Teardown]   Stop using certificate

A user can obtain a role she holds from a VO she belongs to
  [Tags]   debug
  [Setup]   Use certificate   test0
  @{roles}=   Create List   /${voName}/${voName}/R1   /${voName}/${voName}/R2
  Create voms proxy with roles   @{roles}
  [Teardown]   Stop using certificate
  
See if voms-proxy-init --hours works
  [Setup]   Use certificate   test0
  ${output}   Execute and Check Success   echo ${privateKeyPassword} | voms-proxy-init -pwstdin -hours 3
  Should Contain  ${output}  Created proxy
  ${output} =  Get proxy info  -timeleft
  Should Match Regexp  ${output}  (02|03):\\d+:\\d+
  [Teardown]   Stop using certificate 

See if voms-proxy-init --bits works
  [Setup]   Use certificate   test0
  ${output}   Execute and Check Success   echo ${privateKeyPassword} | voms-proxy-init -pwstdin -bits 2048
  Should Contain  ${output}  Created proxy
  ${output} =  Get proxy info  -strength
  Should Match Regexp  ${output}  2048 
  [Teardown]   Stop using certificate

See if voms-proxy-init --noregen works
  [Setup]   Use certificate   test0
  ${output}  Create voms proxy 
  ${output}   Execute and Check Success   echo ${privateKeyPassword} | voms-proxy-init -pwstdin -noregen
  Should Contain  ${output}  Created proxy
  ${output} =  Get proxy info  -chain
  Should Match Regexp  ${output}   Subject:\\s+(CN=proxy,){2}CN=.+
  [Teardown]   Stop using certificate

See if voms-proxy-init --conf works
  [Setup]   Use certificate   test0
  ${output}   Execute and Check Success   echo "--voms="${voName}>/tmp/myconf.test;cat /tmp/myconf.test
  ${output}   Execute and Check Success   echo ${privateKeyPassword} | voms-proxy-init -pwstdin -conf /tmp/myconf.test
  Should Contain  ${output}  Created proxy
  [Teardown]   Stop using certificate

See if voms-proxy-init --old works
  [Setup]   Use certificate   test0
  ${output}   Execute and Check Success   echo ${privateKeyPassword} | voms-proxy-init -pwstdin -old
  ${output}   Execute and Check Success   echo ${privateKeyPassword} | voms-proxy-info
  Should Match Regexp  ${output}  type\\s+:\\s+full legacy globus proxy
  [Teardown]   Stop using certificate

