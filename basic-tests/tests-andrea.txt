*** Settings ***
Resource   lib/vomslib.txt


*** Keywords ***

Setup mixed proxy chain
	Use certificate   test0
	Create proxy   
	Create proxy   -rfc --skip_chain_integrity_checks -noregen
	Create proxy   -noregen -proxyver 3 --skip_chain_integrity_checks

*** Test Cases ***

See if voms-proxy-destroy -file works
    [Setup]  Use certificate  test0
    Create Proxy  --out /tmp/to_be_deleted
	Destroy Proxy  --file /tmp/to_be_deleted
	File Should Not Exist   /tmp/to_be_deleted
    [Teardown]  Stop using certificate

See if a requested role ends up as primary fqan
	[Setup]   Use certificate   test0
	Create proxy   --voms ${voName}:/${voName}/G1/Role=R1
	${output}	Get proxy info   --fqan
	Should Start With   ${output}   /${voName}/G1/Role=R1/Capability=NULL
    [Teardown]  Stop using certificate

See if multiple -voms work as expected
	[Setup]   Use certificate   test0
	Create proxy   --voms ${voName}:/${voName}/G1 --voms ${voName}:/${voName}/G1/Role=R1 
	${output}	Get proxy info   --fqan
	Should Start With   ${output}   /${voName}/G1/Role=NULL/Capability=NULL
	Should Contain   ${output}   /${voName}/G1/Role=R1/Capability=NULL
    [Teardown]  Stop using certificate

See if request for multiple VOs work as expected
	[Documentation]   ACs for multiple VOs should be included in the proxy in the same order as they are requested
	[Setup]   Use certificate   test0
	Create proxy   --voms ${voName}.2 --voms ${voName} 
	${output}	Get proxy info   --fqan
	Should Start With   ${output}   /${voName}.2/Role=NULL/Capability=NULL
	Should Contain   ${output}   /${voName}/Role=NULL/Capability=NULL
	[Teardown]   Stop using certificate

See if voms-proxy-init -noregen work as expected
	[Setup]   Use certificate   test0
	Create proxy   
	Execute And Check Success   voms-proxy-init -noregen -voms ${voName}
	${fqans}	Get proxy info   --fqan
	${proxySubject}   Get proxy info   --subject
	${certSubject}   Get named certificate subject   test0
	Should Be Equal   ${proxySubject}   ${certSubject}/CN=proxy/CN=proxy
	Should Contain   ${fqans}   /${voName}/Role=NULL/Capability=NULL
	[Teardown]   Stop using certificate

Non member request for role should fail
	[Setup]   Use certificate   test3
	${output}   Create proxy failure   -voms ${voName}:/${voName}/G1/Role=R1
	Should Contain   ${output}   User unknown to this VO
	[Teardown]   Stop using certificate

Request for non-existing role should fail
	[Setup]   Use certificate   test0
	${output}   Create proxy failure   -voms ${voName}:/${voName}/G1/Role=Berlusconi
	Should Contain   ${output}   Remote VOMS server contacted succesfully.
	Should Contain   ${output}   User's request for VOMS attributes could not be fulfilled.
	[Teardown]   Stop using certificate

Invalid key size request should fail
	[Setup]   Use certificate   test0
	${output}   Create proxy failure   -bits 5000
	Should Contain   ${output}   Unsupported key size: 
	${output}   Create proxy failure   -bits -128
	Should Contain   ${output}   Unsupported key size: 
	${output}   Create proxy failure   -bits 0
	Should Contain   ${output}   Unsupported key size: 
	${output}   Create proxy failure   -bits 473289ybf
	Should Contain   ${output}   Invalid input for key size parameter. Please provide a valid key size value.
	[Teardown]   Stop using certificate

Invalid validity request should fail
	[Setup]   Use certificate   test0
	${output}   Create proxy failure   -valid 5000
	Should Contain   ${output}   Illegal format for lifetime property.
	${output}   Create proxy failure   -valid -5000:0
	Should Contain   ${output}   Number of hours must be a positive integer.
	${output}   Create proxy failure   -valid 50:-10
	Should Contain   ${output}   Number of minutes must be a positive integer.
	${output}   Create proxy failure   -valid 12:121
	Should Contain   ${output}   Number of minutes must be in the range 0-59.
	[Teardown]   Stop using certificate

Invalid vomslife request should fail
	[Setup]   Use certificate   test0
	${output}   Create proxy failure   -vomslife 5000
	Should Contain   ${output}  Illegal format for lifetime property. 
	${output}   Create proxy failure   -vomslife -12:12
	Should Contain   ${output}   Number of hours must be a positive integer.
	${output}   Create proxy failure   -vomslife 12:-12
	Should Contain   ${output}   Number of minutes must be a positive integer.
	${output}   Create proxy failure   -vomslife 12:121
	Should Contain   ${output}   Number of minutes must be in the range 0-59.
	[Teardown]   Stop using certificate

Request for unknown VO should produce meaningful error message
	[Setup]   Use certificate   test0
	${output}   Create proxy failure   -voms paolabarale
	Should Contain   ${output}   VOMS server for VO paolabarale is not known! Check your vomses configuration.
	[Teardown]   Stop using certificate

voms-proxy-init can parse p12 certificates
	[Setup]   Use p12 certificate   test0
	Create proxy 
	${proxySubject}   Get proxy info   --subject
	${certSubject}   Get named certificate subject   test0
    Should Be Equal   ${proxySubject}   ${certSubject}/CN=proxy
	[Teardown]   Stop using certificate

voms-proxy-init -cert option understands p12 certificates
	[Tags]   dev
	${cert}   Get named p12 certificate path   test0
	${tmpCert}   Run   mktemp /tmp/voms-p12testXXX
	Execute and Check Success   cp ${cert} ${tmpCert}
	Execute and Check Success   chmod 600 ${tmpCert}
	Create proxy   -cert ${tmpCert}
	${proxySubject}   Get proxy info   --subject
	${certSubject}   Get named certificate subject   test0
	Should Be Equal   ${proxySubject}   ${certSubject}/CN=proxy
	[Teardown]   Stop using certificate

voms-proxy-init generates proxy with the appropriate file permissions
	[Setup]   Use certificate   test0
	Create proxy
	${proxyFile}   Get proxy path
	${lsOutput}   Run   ls -l ${proxyFile}
	Should start with   ${lsOutput}   -rw------
	[Teardown]   Stop using certificate

voms-proxy-init enforces chain integrity
	[Setup]   Use certificate   test0
	[Tags]   dev
	Create proxy   
	${output}   Create proxy   -noregen -rfc
	Should Contain   ${output}   forced LEGACY proxy type to be compatible with the type of the issuing proxy.
	${type}   Get proxy info   --type
	Should Be Equal   ${type}   full legacy globus proxy
	Destroy proxy
	Create proxy   -rfc
	${output}   Create proxy   -noregen 
	Should Contain   ${output}   forced RFC3820 proxy type to be compatible with the type of the issuing proxy.
	${type}   Get proxy info   --type
	Should Be Equal   ${type}   RFC3820 compliant impersonation proxy
	[Teardown]   Stop using certificate

limited proxies can sign only limited proxies
	[Setup]   Use certificate   test0
	[Tags]   dev
	Create proxy   -limited
	${output}   Create proxy   -noregen
	Should Contain   ${output}   forced the creation of a limited proxy to be compatible with the type of the issuing proxy.
	${type}   Get proxy info   --type
	Should Be Equal   ${type}   limited legacy globus proxy
	Destroy proxy
	Create proxy   -rfc -limited
	${output}   Create proxy   -noregen
	Should Contain   ${output}   forced the creation of a limited proxy to be compatible with the type of the issuing proxy.
	${type}   Get proxy info   --type
	Should Be Equal   ${type}   RFC3820 compliant limited proxy
	[Teardown]   Stop using certificate

voms-proxy-init correctly fails on mixed proxy chains
	[Setup]   Setup mixed proxy chain
	[Tags]   dev
	${output}   Create proxy failure   --noregen
	Should Contain   ${output}   Cannot generate a proxy certificate starting from a mixed type proxy chain.
	[Teardown]   Stop using certificate
