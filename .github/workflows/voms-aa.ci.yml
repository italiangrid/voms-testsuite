name: Run testsuite

on: push

env:
  server_beta: v1.12.0.rc3
  server_stable: v1.11.0
  client_beta: 9-beta
  client_stable: 7-stable

jobs:
  run_testsuite_vomsaa:
    name: ${{ matrix.server }} (voms-aa), ${{ matrix.client }}

    outputs:
      client_beta_server_beta: ${{ steps.tests.outputs.client_beta_server_beta }}
      client_beta_server_stable: ${{ steps.tests.outputs.client_beta_server_stable }}
      client_stable_server_beta: ${{ steps.tests.outputs.client_stable_server_beta }}
      client_stable_server_stable: ${{ steps.tests.outputs.client_stable_server_stable }}

    strategy:
      matrix:
        client: [client_beta, client_stable]
        server: [server_beta, server_stable]

    runs-on: ubuntu-latest

    continue-on-error: true

    env:
      ROBOT_OPTIONS: --variable vo1:vo.2 --variable vo1_host:voms-aa.test.example --variable vo1_issuer:'/C=IT/O=IGI/CN=voms-aa.test.example' --variable vo2:vo.1 --variable vo2_host:voms.test.example --variable vo2_issuer:'/C=IT/O=IGI/CN=voms.test.example' --exclude issue-723 --exclude issue-724 --exclude issue-726

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start compose
        run: |
          docker compose --file docker-compose.ci.yml build --no-cache trust
          docker compose --file docker-compose.ci.yml up --detach trust db voms testsuite vomsaa ngx
        working-directory: compose
        env:
          TS_IMAGE: italiangrid/voms-testsuite:centos${{ env[matrix.client] }}
          VOMS_IMAGE: italiangrid/voms:centos7-stable
          VOMS_AA_IMAGE_TAG: ${{ env[matrix.server] }}

      - name: Deploy db and voms
        run: |
          docker compose --file docker-compose.ci.yml exec -T --workdir /scripts db bash /scripts/populate-db.sh
          docker compose --file docker-compose.ci.yml exec -T --workdir /scripts voms bash /scripts/setup-and-start-voms.sh
        working-directory: compose

      - name: Create artifacts dir
        if: ${{ always() }}
        run: |
          ARTIFACTS_PATH=${HOME}/artifacts
          echo ARTIFACTS_PATH: ${ARTIFACTS_PATH}
          # save it in the job environment
          echo "ARTIFACTS_PATH=${ARTIFACTS_PATH}" >> ${GITHUB_ENV}
          mkdir -p ${ARTIFACTS_PATH}/logs ${ARTIFACTS_PATH}/java ${ARTIFACTS_PATH}/cpp

      - name: Enable legacy OpenSSL crypto policies on EL9
        if: matrix.client == 'CLIENT_BETA'
        run: docker compose --file docker-compose.ci.yml exec -T testsuite bash -c "sudo update-crypto-policies --set LEGACY"
        working-directory: compose

      - name: Run testsuite for java clients
        run: docker compose --file docker-compose.ci.yml exec -T -e ROBOT_OPTIONS="${ROBOT_OPTIONS}" testsuite bash /scripts/ci-run-testsuite.sh
        working-directory: compose
        continue-on-error: true


      - name: Collect test report for java clients
        if: ${{ always() }}
        run: |
          docker compose --file docker-compose.ci.yml cp testsuite:/tmp/reports ${ARTIFACTS_PATH}/java
          result=$(cat ${ARTIFACTS_PATH}/java/reports/report.html | grep '^window.output\["stats"\]' | sed -e 's/window.output\["stats"\] = //' -e 's/;$//')
          java_passed_tests=$(echo "${result}" | jq .[0][0].pass)
          java_failed_tests=$(echo "${result}" | jq .[0][0].fail)
          java_client_version=$(docker compose --file docker-compose.ci.yml exec -T testsuite bash -c "voms-proxy-init -version" | awk '{print $3}')
          echo "JAVA_PASSED_TESTS=${java_passed_tests}" >> "${GITHUB_ENV}"
          echo "JAVA_FAILED_TESTS=${java_failed_tests}" >> "${GITHUB_ENV}"
          echo "JAVA_CLIENT_VERSION=${java_client_version}" >> "${GITHUB_ENV}"
        working-directory: compose

      - name: Run testsuite for cpp clients
        id: tests
        run: |
          docker compose --file docker-compose.ci.yml exec -T -u root testsuite bash -c "update-alternatives --set voms-proxy-init /usr/bin/voms-proxy-init2; update-alternatives --set voms-proxy-info /usr/bin/voms-proxy-info2; update-alternatives --set voms-proxy-destroy /usr/bin/voms-proxy-destroy2"
          docker compose --file docker-compose.ci.yml exec -T -e ROBOT_OPTIONS="${ROBOT_OPTIONS}" testsuite bash /scripts/ci-run-testsuite.sh --variable client_version:2 --include legacy
        working-directory: compose
        continue-on-error: true

      - name: Collect test report for cpp clients
        if: ${{ always() }}
        run: |
          docker compose --file docker-compose.ci.yml cp testsuite:/tmp/reports ${ARTIFACTS_PATH}/cpp
          result=$(cat ${ARTIFACTS_PATH}/cpp/reports/report.html | grep '^window.output\["stats"\]' | sed -e 's/window.output\["stats"\] = //' -e 's/;$//')
          cpp_passed_tests=$(echo "${result}" | jq .[0][0].pass)
          cpp_failed_tests=$(echo "${result}" | jq .[0][0].fail)
          cpp_client_version=$(docker compose --file docker-compose.ci.yml exec -T testsuite bash -c "voms-proxy-init -version " | grep '^Version:' | awk '{print $2}')
          result_json="{\"cpp_passed_tests\":${cpp_passed_tests},\"cpp_failed_tests\":${cpp_failed_tests},\"java_passed_tests\":${JAVA_PASSED_TESTS},\"java_failed_tests\":${JAVA_FAILED_TESTS},\"cpp_client_version\":\"${cpp_client_version}\",\"java_client_version\":\"${JAVA_CLIENT_VERSION}\"}"
          echo ${result_json}
          echo "${{ matrix.client }}_${{ matrix.server }}=${result_json}" >> "${GITHUB_OUTPUT}"
        working-directory: compose

      - name: Collect logs
        if: ${{ always() }}
        run: |
          docker compose --file docker-compose.ci.yml logs --no-color testsuite > ${ARTIFACTS_PATH}/logs/testsuite.log
          docker compose --file docker-compose.ci.yml logs --no-color vomsaa > ${ARTIFACTS_PATH}/logs/voms.log
        working-directory: compose

      - name: Stop compose
        if: ${{ always() }}
        run: docker compose --file docker-compose.ci.yml down --volumes
        working-directory: compose

      - name: Upload artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-report-and-logs_${{ matrix.client }}_${{ matrix.server }}
          path: ${{ env.ARTIFACTS_PATH }}

  publish-results:
    runs-on: ubuntu-latest
    needs: [run_testsuite_vomsaa]
    steps:
      - name: test1
        run: |
          results='${{ toJSON(needs.run_testsuite_vomsaa.outputs) }}'
          echo $results | jq .
        continue-on-error: true

      - name: test2
        run: |
          results2='${{ fromJSON(needs.run_testsuite_vomsaa.outputs) }}'
          echo $results2
        continue-on-error: true

      - name: test3
        run: |
          results3='${{ needs.run_testsuite_vomsaa.outputs }}'
        continue-on-error: true

      - name: test4
        run: |
          results4='${{ toJSON(steps.tests.outputs) }}'
          echo $results4 | jq .
        continue-on-error: true
      
      - name: test5
        run: |
          results5='${{ fromJSON(steps.tests.outputs) }}'
          echo $results5
        continue-on-error: true

      - name: test6
        run: |
          results6='${{ steps.tests.outputs }}'
          echo $results6
        continue-on-error: true

      - name: publish
        run: |
          cpp_stable_stable_passed=$(echo '${{ toJSON(needs.run_testsuite_vomsaa.outputs.client_stable_server_stable.cpp_passed_tests) }}'
          cpp_stable_stable_failed=$(echo '${{ toJSON(needs.run_testsuite_vomsaa.outputs.client_stable_server_stable.cpp_failed_tests) }}'
          echo "# Test report" >> $GITHUB_STEP_SUMMARY
          echo "|                          | VOMS AA stable | VOMS AA beta |" >> $GITHUB_STEP_SUMMARY
          echo "| ------------------------ | -------------- | ------------ |" >> $GITHUB_STEP_SUMMARY
          echo "| VOMS clients cpp stable  | :white_check_mark: Passed $cpp_stable_stable_passed :x: Failed $cpp_stable_stable_failed | |" >> $GITHUB_STEP_SUMMARY
          echo "| VOMS clients java stable | |  |" >> $GITHUB_STEP_SUMMARY
          echo "| VOMS clients cpp beta    | |  |" >> $GITHUB_STEP_SUMMARY
          echo "| VOMS clients java beta   | |  |" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true
