*** Settings ***
Resource   lib/vomslib.txt
Resource   lib/variables.txt
Documentation  Generic tests for voms-proxy-init

*** Keywords ***

Setup mixed proxy chain
  Use certificate   test0
  Create proxy   
  Create proxy   -rfc --skip_chain_integrity_checks -noregen
  Create proxy   -noregen -proxyver 3 --skip_chain_integrity_checks

*** Test Cases ***

See if voms-proxy-init --version returns after displaying the version
  ${output}  Create Proxy  --version
  Should Match Regexp  ${output}  voms-proxy-init v. \\w

See if voms-proxy-init correctly set unlimited pathLen by default for rfc proxies
  [Documentation]   Regression test for https://issues.infn.it:8443/browse/VOMS-256
  [Tags]   debug
  [Setup]   Use certificate   test0
  Create Proxy   --rfc
  ${output}   Get proxy openssl
  Should Match Regexp   ${output}  Path Length Constraint: infinite 
  [Teardown]  Stop using certificate

See if voms-proxy-init correctly set pathLen as requested 
  [Documentation]   Regression test for https://issues.infn.it:8443/browse/VOMS-256
  [Tags]   debug
  [Setup]   Use certificate   test0
  Create Proxy   --rfc --path_length 1
  ${output}   Get proxy openssl
  Should Match Regexp   ${output}   Path Length Constraint: 01
  [Teardown]  Stop using certificate

See if a requested role ends up as primary fqan
  [Tags]  remote
  [Setup]   Use certificate   test0
  Create proxy   --voms ${vo1}:/${vo1}/G1/Role=R1
  ${output}Get proxy info   --fqan
  Should Start With   ${output}   /${vo1}/G1/Role=R1/Capability=NULL
  [Teardown]  Stop using certificate

See if multiple -voms work as expected
  [Tags]  remote
  [Setup]   Use certificate   test0
  Create proxy   --voms ${vo1}:/${vo1}/G1 --voms ${vo1}:/${vo1}/G1/Role=R1 
  ${output}Get proxy info   --fqan
  Should Start With   ${output}   /${vo1}/G1/Role=NULL/Capability=NULL
  Should Contain   ${output}   /${vo1}/G1/Role=R1/Capability=NULL
  [Teardown]  Stop using certificate

See if request for multiple VOs work as expected
  [Tags]  remote
  [Documentation]   ACs for multiple VOs should be included in the proxy in the same order as they are requested
  [Setup]   Use certificate   test0
  Create proxy   --voms ${vo2} --voms ${vo1} 
  ${output}Get proxy info   --fqan
  Should Start With   ${output}   /${vo2}/Role=NULL/Capability=NULL
  Should Contain   ${output}   /${vo1}/Role=NULL/Capability=NULL
  [Teardown]   Stop using certificate

Non member request for role should fail
  [Tags]  remote
  [Setup]   Use certificate   test3
  ${output}   Create proxy failure   -voms ${vo1}:/${vo1}/G1/Role=R1
  Should Contain   ${output}   User unknown to this VO
  [Teardown]   Stop using certificate

Request for non-existing role should fail
  [Tags]  remote
  [Setup]   Use certificate   test0
  ${output}   Create proxy failure   -voms ${vo1}:/${vo1}/G1/Role=Berlusconi
  Should Contain   ${output}   Remote VOMS server contacted succesfully.
  Should Contain   ${output}   User's request for VOMS attributes could not be fulfilled.
  [Teardown]   Stop using certificate

Invalid key size request should fail
  [Setup]   Use certificate   test0
  ${output}   Create proxy failure   -bits 5000
  Should Contain   ${output}   Unsupported key size: 
  ${output}   Create proxy failure   -bits -128
  Should Contain   ${output}   Unsupported key size: 
  ${output}   Create proxy failure   -bits 0
  Should Contain   ${output}   Unsupported key size: 
  ${output}   Create proxy failure   -bits 473289ybf
  Should Contain   ${output}   Invalid input for key size parameter. Please provide a valid key size value.
  [Teardown]   Stop using certificate

Invalid validity request should fail
  [Setup]   Use certificate   test0
  ${output}   Create proxy failure   -valid 5000
  Should Contain   ${output}   Illegal format for lifetime property.
  ${output}   Create proxy failure   -valid -5000:0
  Should Contain   ${output}   Number of hours must be a positive integer.
  ${output}   Create proxy failure   -valid 50:-10
  Should Contain   ${output}   Number of minutes must be a positive integer.
  ${output}   Create proxy failure   -valid 12:121
  Should Contain   ${output}   Number of minutes must be in the range 0-59.
  [Teardown]   Stop using certificate

Invalid vomslife request should fail
  [Tags]  remote
  [Setup]   Use certificate   test0
  ${output}   Create proxy failure   -vomslife 5000
  Should Contain   ${output}  Illegal format for lifetime property. 
  ${output}   Create proxy failure   -vomslife -12:12
  Should Contain   ${output}   Number of hours must be a positive integer.
  ${output}   Create proxy failure   -vomslife 12:-12
  Should Contain   ${output}   Number of minutes must be a positive integer.
  ${output}   Create proxy failure   -vomslife 12:121
  Should Contain   ${output}   Number of minutes must be in the range 0-59.
  [Teardown]   Stop using certificate

Request for unknown VO should produce meaningful error message
  [Tags]  remote
  [Setup]   Use certificate   test0
  ${output}   Create proxy failure   -voms paolabarale
  Should Contain   ${output}   VOMS server for VO paolabarale is not known! Check your vomses configuration.
  [Teardown]   Stop using certificate

voms-proxy-init can parse p12 certificates
  [Setup]   Use p12 certificate   test0
  Create proxy 
  ${proxySubject}   Get proxy info   --subject
  ${certSubject}   Get named certificate subject   test0
  Should Be Equal   ${proxySubject}   ${certSubject}/CN=proxy
  [Teardown]   Stop using certificate

voms-proxy-init -cert option understands p12 certificates
  ${cert}   Get named p12 certificate path   test0
  ${tmpCert}   Run   mktemp /tmp/voms-p12testXXX
  Execute and Check Success   cp ${cert} ${tmpCert}
  Execute and Check Success   chmod 600 ${tmpCert}
  Create proxy   -cert ${tmpCert}
  ${proxySubject}   Get proxy info   --subject
  ${certSubject}   Get named certificate subject   test0
  Should Be Equal   ${proxySubject}   ${certSubject}/CN=proxy
  [Teardown]   Stop using certificate

voms-proxy-init generates proxy with the appropriate file permissions
  [Setup]   Use certificate   test0
  Create proxy
  ${proxyFile}   Get proxy path
  ${lsOutput}   Run   ls -l ${proxyFile}
  Should start with   ${lsOutput}   -rw------
  [Teardown]   Stop using certificate

voms-proxy-init enforces chain integrity
  [Setup]   Use certificate   test0
  Create proxy   
  ${output}   Create proxy   -noregen -rfc
  Should Contain   ${output}   forced LEGACY proxy type to be compatible with the type of the issuing proxy.
  ${type}   Get proxy info   --type
  Should Be Equal   ${type}   full legacy globus proxy
  Destroy proxy
  Create proxy   -rfc
  ${output}   Create proxy   -noregen 
  Should Contain   ${output}   forced RFC3820 proxy type to be compatible with the type of the issuing proxy.
  ${type}   Get proxy info   --type
  Should Be Equal   ${type}   RFC3820 compliant impersonation proxy
  [Teardown]   Stop using certificate

limited proxies can sign only limited proxies
  [Setup]   Use certificate   test0
  Create proxy   -limited
  ${output}   Create proxy   -noregen
  Should Contain   ${output}   forced the creation of a limited proxy to be compatible with the type of the issuing proxy.
  ${type}   Get proxy info   --type
  Should Be Equal   ${type}   limited legacy globus proxy
  Destroy proxy
  Create proxy   -rfc -limited
  ${output}   Create proxy   -noregen
  Should Contain   ${output}   forced the creation of a limited proxy to be compatible with the type of the issuing proxy.
  ${type}   Get proxy info   --type
  Should Be Equal   ${type}   RFC3820 compliant limited proxy
  [Teardown]   Stop using certificate

voms-proxy-init correctly fails on mixed proxy chains
  [Setup]   Setup mixed proxy chain
  ${output}   Create proxy failure   --noregen
  Should Contain   ${output}   Cannot generate a proxy certificate starting from a mixed type proxy chain.
  [Teardown]   Stop using certificate

voms-proxy-init --order cannot force role requests
  [Tags]  remote
  [Setup]   Use certificate   test0
  Create proxy   -voms ${vo1} -order /${vo1}/G1/Role=R1 -order /${vo1}/G1
  ${output}   Get proxy info   --fqan
  Should Start With   ${output}   /${vo1}/G1/Role=NULL/Capability=NULL
  Should Not Contain   ${output}   /${vo1}/G1/Role=R1/Capability=NULL
  [Teardown]   Stop using certificate

long delegation chain work as expected
  [Tags]   dev,remote
  [Setup]   Use certificate   test0
  Create proxy
  Create proxy   -noregen
  Create proxy   -noregen
  Create proxy   -noregen
  Create proxy   -noregen
  ${output}   Create proxy   -voms ${vo1}
  [Teardown]   Stop using certificate

See if AC validation works when LSC file exists
  [Setup]  Use certificate   test0
  Create voms proxy
  [Teardown]  Stop using certificate

See if voms-proxy-init fails correctly when cert and key do not match
  [Setup]  Use mixed credentials  test0   test1
  ${output}   Create proxy failure
  Should Contain   ${output}   Provided private key is not matching the certificate
  [Teardown]  Stop using certificate

See if voms-proxy-init fails correctly when the key has incorrect permissions
  [Setup]  Use certificate   test0
  Execute and Check Success   chmod 777 %{HOME}/.globus/userkey.pem
  ${output}   Create Proxy Failure
  Should Contain   ${output}  Wrong file permissions on file %{HOME}/.globus/userkey.pem. Required permissions are: 400 
  [Teardown]  Stop using certificate

See if voms-proxy-init fails correctly when the key is empty
  [Setup]  Use certificate   test0
  Execute and Check Success   rm -f %{HOME}/.globus/userkey.pem
  Execute and Check Success   touch %{HOME}/.globus/userkey.pem
  ${output}   Create Proxy Failure
  Should Contain   ${output}   No credentials found! 
  [Teardown]  Stop using certificate

See if voms-proxy-init fails correctly when the key is corrupted
  [Setup]  Use certificate   test0
  ${tmpKey}   Run  mktemp /tmp/key-XXX
  Execute and Check Success  cat %{HOME}/.globus/userkey.pem|tr [a-z] [A-Z] > ${tmpKey}
  Execute and Check Success   chmod 400 ${tmpKey}
  ${output}   Create Proxy Failure   --cert %{HOME}/.globus/usercert.pem --key ${tmpKey}
  Should Contain   ${output}   Can not load the PEM private key
  [Teardown]  Stop using certificate

Check the error message if a file cannot be written
  [Setup]  Use certificate   test0
  ${tmpFile}   Run  mktemp /tmp/voms-testXXX
  Execute and Check Success  chmod 0000 ${tmpFile}
  ${output}  Create Proxy Failure  -out ${tmpFile}
  Should Contain  ${output}  Permission denied
  [Teardown]  Stop using certificate

See if voms-proxy-init --dont_verify_ac works
  [Tags]  remote
  [Setup]  Use certificate   test0
  ${output}  Create Proxy   -debug -voms ${vo1} --dont_verify_ac
  Should Not Contain  ${output}  VOMS AC validation for VO ${vo1} succeded 
  [Teardown]  Stop using certificate

Check that voms-proxy-init requesting more than two FQANs works as expected
  [Tags]  remote
  [Setup]  Use certificate   test0
  Create Proxy  voms-proxy-init -voms ${vo1}:/${vo1}/G1/Role=R1 -voms ${vo1}:/${vo1}/G1 -voms ${vo1}:/${vo1}
  [Teardown]  Stop using certificate
